--- a/test/mocha/cli.js	2017-04-09 11:36:57.000000000 +0800
+++ b/test/mocha/cli.js	2022-03-17 09:27:04.682666300 +0800
@@ -21,6 +21,7 @@
         });
     });
     it("Should be able to filter comments correctly with `--comment all`", function (done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/comments/filter.js --comments all';
 
         exec(command, function (err, stdout) {
@@ -31,6 +32,7 @@
         });
     });
     it("Should be able to filter comments correctly with `--comment <RegExp>`", function (done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/comments/filter.js --comments /r/';
 
         exec(command, function (err, stdout) {
@@ -41,6 +43,7 @@
         });
     });
     it("Should be able to filter comments correctly with just `--comment`", function (done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/comments/filter.js --comments';
 
         exec(command, function (err, stdout) {
@@ -51,6 +54,7 @@
         });
     });
     it("Should append source map to output when using --source-map-inline", function (done) {
+        this.timeout(40000);
        var command = uglifyjscmd + ' test/input/issue-1323/sample.js --source-map-inline';
 
        exec(command, function (err, stdout) {
@@ -62,6 +66,7 @@
        });
     });
     it("should not append source map to output when not using --source-map-inline", function (done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-1323/sample.js';
 
         exec(command, function (err, stdout) {
@@ -72,6 +77,7 @@
         });
     });
     it("Should work with --keep-fnames (mangle only)", function (done) {
+       this.timeout(40000);
        var command = uglifyjscmd + ' test/input/issue-1431/sample.js --keep-fnames -m';
 
        exec(command, function (err, stdout) {
@@ -82,6 +88,7 @@
        });
     });
     it("Should work with --keep-fnames (mangle & compress)", function (done) {
+       this.timeout(40000);
        var command = uglifyjscmd + ' test/input/issue-1431/sample.js --keep-fnames -m -c unused=false';
 
        exec(command, function (err, stdout) {
@@ -92,7 +99,8 @@
        });
     });
     it("Should work with keep_fnames under mangler options", function (done) {
-       var command = uglifyjscmd + ' test/input/issue-1431/sample.js -m keep_fnames=true';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/issue-1431/sample.js -m keep_fnames=true';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -102,7 +110,8 @@
        });
     });
     it("Should work with --define (simple)", function (done) {
-       var command = uglifyjscmd + ' test/input/global_defs/simple.js --define D=5 -c';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/global_defs/simple.js --define D=5 -c';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -112,7 +121,8 @@
        });
     });
     it("Should work with --define (nested)", function (done) {
-       var command = uglifyjscmd + ' test/input/global_defs/nested.js --define C.D=5,C.V=3 -c';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/global_defs/nested.js --define C.D=5,C.V=3 -c';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -122,7 +132,8 @@
        });
     });
     it("Should work with --define (AST_Node)", function (done) {
-       var command = uglifyjscmd + ' test/input/global_defs/simple.js --define console.log=stdout.println -c';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/global_defs/simple.js --define console.log=stdout.println -c';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -132,7 +143,8 @@
        });
     });
     it("Should work with `--beautify`", function (done) {
-       var command = uglifyjscmd + ' test/input/issue-1482/input.js -b';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/issue-1482/input.js -b';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -142,7 +154,8 @@
        });
     });
     it("Should work with `--beautify bracketize`", function (done) {
-       var command = uglifyjscmd + ' test/input/issue-1482/input.js -b bracketize';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/issue-1482/input.js -b bracketize';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -152,6 +165,7 @@
        });
     });
     it("Should process inline source map", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-520/input.js -mc toplevel --in-source-map inline --source-map-inline';
 
         exec(command, function (err, stdout) {
@@ -162,6 +176,7 @@
         });
     });
     it("Should warn for missing inline source map", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-1323/sample.js --in-source-map inline';
 
         exec(command, function (err, stdout, stderr) {
@@ -173,6 +188,7 @@
         });
     });
     it("Should fail with multiple input and inline source map", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-520/input.js test/input/issue-520/output.js --in-source-map inline --source-map-inline';
 
         exec(command, function (err, stdout, stderr) {
@@ -182,6 +198,7 @@
         });
     });
     it("Should fail with acorn and inline source map", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-520/input.js --in-source-map inline --source-map-inline --acorn';
 
         exec(command, function (err, stdout, stderr) {
@@ -191,6 +208,7 @@
         });
     });
     it("Should fail with SpiderMonkey and inline source map", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/issue-520/input.js --in-source-map inline --source-map-inline --spidermonkey';
 
         exec(command, function (err, stdout, stderr) {
@@ -200,6 +218,7 @@
         });
     });
     it("Should fail with invalid syntax", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/invalid/simple.js';
 
         exec(command, function (err, stdout, stderr) {
@@ -213,6 +232,7 @@
         });
     });
     it("Should fail with correct marking of tabs", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/invalid/tab.js';
 
         exec(command, function (err, stdout, stderr) {
@@ -226,6 +246,7 @@
         });
     });
     it("Should fail with correct marking at start of line", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/invalid/eof.js';
 
         exec(command, function (err, stdout, stderr) {
@@ -239,6 +260,7 @@
         });
     });
     it("Should fail with a missing loop body", function(done) {
+        this.timeout(40000);
         var command = uglifyjscmd + ' test/input/invalid/loop-no-body.js';
 
         exec(command, function (err, stdout, stderr) {
@@ -252,7 +274,8 @@
         });
     });
     it("Should support hyphen as shorthand", function(done) {
-       var command = uglifyjscmd + ' test/input/issue-1431/sample.js -m keep-fnames=true';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/issue-1431/sample.js -m keep-fnames=true';
 
        exec(command, function (err, stdout) {
            if (err) throw err;
@@ -262,7 +285,8 @@
        });
     });
     it("Should throw syntax error (5--)", function(done) {
-       var command = uglifyjscmd + ' test/input/invalid/assign_1.js';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/invalid/assign_1.js';
 
        exec(command, function (err, stdout, stderr) {
            assert.ok(err);
@@ -277,7 +301,8 @@
        });
     });
     it("Should throw syntax error (Math.random() /= 2)", function(done) {
-       var command = uglifyjscmd + ' test/input/invalid/assign_2.js';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/invalid/assign_2.js';
 
        exec(command, function (err, stdout, stderr) {
            assert.ok(err);
@@ -292,7 +317,8 @@
        });
     });
     it("Should throw syntax error (++this)", function(done) {
-       var command = uglifyjscmd + ' test/input/invalid/assign_3.js';
+        this.timeout(40000);
+        var command = uglifyjscmd + ' test/input/invalid/assign_3.js';
 
        exec(command, function (err, stdout, stderr) {
            assert.ok(err);
--- a/test/mocha/operator.js	2017-04-09 11:36:57.000000000 +0800
+++ b/test/mocha/operator.js	2022-03-17 13:25:27.263404400 +0800
@@ -3,6 +3,7 @@
 
 describe("operator", function() {
     it("Should handle mixing of ++/+/--/- correctly", function() {
+        this.timeout(40000);
         function evaluate(exp) {
             return new Function("var a=1,b=2,c=" + exp + ";return{a:a,b:b,c:c}")();
         }
